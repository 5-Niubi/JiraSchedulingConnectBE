name: Deployment Pipeline
on:
  push:
    branches:
      - manhpv
jobs:
  build-algorithm-service:
    name: Build algorithm service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ vars.REGISTRY }}/${{ vars.ALGO_SERVICE_IMAGE }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "AlgorithmService/Dockerfile"
          push: true
          tags: 0.0.4
          labels: ${{ steps.meta.outputs.labels }}

  build-backend-service:
    name: Build backend service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ vars.REGISTRY }}/${{ vars.BE_SERVICE_IMAGE }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "JiraSchedulingConnectAppService/Dockerfile"
          push: true
          tags: 0.0.4
          labels: ${{ steps.meta.outputs.labels }}
  
  Deployment:
    name: Test service run success
    runs-on: ubuntu-latest
    needs: [build-algorithm-service, build-backend-service]
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      
      - name: Test the Docker image
        run: IMAGE_TAG=${{ steps.meta.outputs.tags }}_${{ github.sha }}  ALGO_IMAGE_TAG=${{ steps.meta.outputs.tags }}_${{ github.sha }} docker-compose -f docker-compose.deployment.yml up

  # push_to_registry:
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   needs: [build, test]
  #   if: always()

  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         username: pham2604
  #         password: PhamManh@2604

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.BE_SERVICE_IMAGE }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: "{{defaultContext}}"
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
      
    
